<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
  
  


  <head>
    <title>
      timer.cpp in ps/trunk/source/lib
     – Wildfire Games
    </title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <!--[if IE]><script type="text/javascript">window.location.hash = window.location.hash;</script><![endif]-->
        <link rel="search" href="/search" />
        <link rel="help" href="/wiki/TracGuide" />
        <link rel="alternate" href="/browser/ps/trunk/source/lib/timer.cpp?format=txt" type="text/plain" title="Plain Text" /><link rel="alternate" href="/export/12774/ps/trunk/source/lib/timer.cpp" type="text/x-c++src; charset=iso-8859-15" title="Original Format" />
        <link rel="tracwysiwyg.base" href="/" />
        <link rel="start" href="/wiki" />
        <link rel="stylesheet" href="/chrome/common/css/trac.css" type="text/css" /><link rel="stylesheet" href="/chrome/common/css/code.css" type="text/css" /><link rel="stylesheet" href="/pygments/trac.css" type="text/css" /><link rel="stylesheet" href="/chrome/common/css/browser.css" type="text/css" /><link rel="stylesheet" href="/chrome/tracwysiwyg/wysiwyg.css" type="text/css" />
        <link rel="tracwysiwyg.stylesheet" href="/chrome/common/css/trac.css" /><link rel="tracwysiwyg.stylesheet" href="/chrome/tracwysiwyg/editor.css" />
        <link rel="prev" href="/browser/ps/trunk/source/lib/timer.cpp?rev=9362" title="Revision 9362" />
        <link rel="shortcut icon" href="/chrome/site/wfg.ico" type="image/x-icon" />
        <link rel="icon" href="/chrome/site/wfg.ico" type="image/x-icon" />
      <link type="application/opensearchdescription+xml" rel="search" href="/search/opensearch" title="Search Wildfire Games" />
    <script type="text/javascript" src="/chrome/common/js/jquery.js"></script><script type="text/javascript" src="/chrome/common/js/babel.js"></script><script type="text/javascript" src="/chrome/common/js/messages/en_US.js"></script><script type="text/javascript" src="/chrome/common/js/trac.js"></script><script type="text/javascript" src="/chrome/common/js/search.js"></script><script type="text/javascript" src="/chrome/tracwysiwyg/wysiwyg.js"></script><script type="text/javascript" src="/chrome/tracwysiwyg/wysiwyg-load.js"></script>
    <!--[if lt IE 7]>
    <script type="text/javascript" src="/chrome/common/js/ie_pre7_hacks.js"></script>
    <![endif]-->
    <script type="text/javascript" src="/chrome/common/js/folding.js"></script>
    <script type="text/javascript">
      jQuery(document).ready(function($) {
        $(".trac-toggledeleted").show().click(function() {
                  $(this).siblings().find(".trac-deleted").toggle();
                  return false;
        }).click();
        $("#jumploc input").hide();
        $("#jumploc select").change(function () {
          this.parentNode.parentNode.submit();
        });
          $('#preview table.code').enableCollapsibleColumns($('#preview table.code thead th.content'));
      });
    </script>
  </head>
  <body>
    <div id="banner">
      <div id="header">
        <a id="logo" href="/"><img src="/chrome/site/logoleft.gif" alt="Wildfire Games" height="86" width="331" /></a>
      </div>
      <form id="search" action="/search" method="get">
        <div>
          <label for="proj-search">Search:</label>
          <input type="text" id="proj-search" name="q" size="18" value="" />
          <input type="submit" value="Search" />
        </div>
      </form>
      <div id="metanav" class="nav">
    <ul>
      <li class="first"><a href="/login">Login</a></li><li><a href="/wiki/TracGuide">Help/Guide</a></li><li><a href="/about">About Trac</a></li><li><a href="/register">Register</a></li><li><a href="/reset_password">Forgot your password?</a></li><li class="last"><a href="/prefs">Preferences</a></li>
    </ul>
  </div>
    </div>
    <div id="mainnav" class="nav">
    <ul>
      <li class="first"><a href="/wiki">Wiki</a></li><li><a href="/timeline">Timeline</a></li><li><a href="/roadmap">Roadmap</a></li><li class="active"><a href="/browser">Browse Source</a></li><li><a href="/report">View Tickets</a></li><li class="last"><a href="/search">Search</a></li>
    </ul>
  </div>
    <div id="main">
      <div id="ctxtnav" class="nav">
        <h2>Context Navigation</h2>
          <ul>
              <li class="first"><span>&larr; <a class="prev" href="/browser/ps/trunk/source/lib/timer.cpp?rev=9362" title="Revision 9362">Previous Revision</a></span></li><li><span class="missing">Next Revision &rarr;</span></li><li><a href="/browser/ps/trunk/source/lib/timer.cpp?annotate=blame" title="Annotate each line with the last changed revision (this can be time consuming...)">Blame</a></li><li class="last"><a href="/log/ps/trunk/source/lib/timer.cpp">Revision Log</a></li>
          </ul>
        <hr />
      </div>
    <div id="content" class="browser">
          <h1>
<a class="pathentry first" href="/browser?order=name" title="Go to repository root">source:</a>
<a class="pathentry" href="/browser/ps?order=name" title="View ps">ps</a><span class="pathentry sep">/</span><a class="pathentry" href="/browser/ps/trunk?order=name" title="View trunk">trunk</a><span class="pathentry sep">/</span><a class="pathentry" href="/browser/ps/trunk/source?order=name" title="View source">source</a><span class="pathentry sep">/</span><a class="pathentry" href="/browser/ps/trunk/source/lib?order=name" title="View lib">lib</a><span class="pathentry sep">/</span><a class="pathentry" href="/browser/ps/trunk/source/lib/timer.cpp?order=name" title="View timer.cpp">timer.cpp</a>
<span class="pathentry sep">@</span>
  <a class="pathentry" href="/changeset/12774" title="View changeset 12774">12774</a>
<br style="clear: both" />
</h1>
        <div id="jumprev">
          <form action="" method="get">
            <div>
              <label for="rev">
                View revision:</label>
              <input type="text" id="rev" name="rev" size="6" />
            </div>
          </form>
        </div>
      <table id="info" summary="Revision info">
        <tr>
          <th scope="col">Revision <a href="/changeset/9410">9410</a>,
            <span title="6676 bytes">6.5 KB</span>
            checked in by jan, <a class="timeline" href="/timeline?from=2011-05-03T12%3A38%3A42Z&amp;precision=second" title="2011-05-03T12:38:42Z in Timeline">18 months</a> ago
            (<a href="/changeset/9410/ps/trunk/source/lib/timer.cpp">diff</a>)</th>
        </tr>
        <tr>
          <td class="message searchable">
              <p>
cleanup (requires update-workspaces)<br />
lib_errors.cpp: replace with status.cpp, adapt to needs at work<br />
wutil: fix runtime warning reported via feedback box<br />
config: merge CONFIG_PARANOIA and !CONFIG_FINAL into CONFIG_ENABLE_CHECKS<br />
add openmp, pointer_typedefs.h<br />
</p>
          </td>
        </tr>
        <tr>
          <td colspan="2">
            <ul class="props">
              <li>
                  Property <strong>svn:eol-style</strong> set to
                  <em><code>native</code></em>
              </li>
            </ul>
          </td>
        </tr>
      </table>
      <div id="preview" class="searchable">
        
  <table class="code"><thead><tr><th class="lineno" title="Line numbers">Line</th><th class="content"> </th></tr></thead><tbody><tr><th id="L1"><a href="#L1">1</a></th><td><span class="cm">/* Copyright (c) 2010 Wildfire Games</span></td></tr><tr><th id="L2"><a href="#L2">2</a></th><td><span class="cm"> *</span></td></tr><tr><th id="L3"><a href="#L3">3</a></th><td><span class="cm"> * Permission is hereby granted, free of charge, to any person obtaining</span></td></tr><tr><th id="L4"><a href="#L4">4</a></th><td><span class="cm"> * a copy of this software and associated documentation files (the</span></td></tr><tr><th id="L5"><a href="#L5">5</a></th><td><span class="cm"> * "Software"), to deal in the Software without restriction, including</span></td></tr><tr><th id="L6"><a href="#L6">6</a></th><td><span class="cm"> * without limitation the rights to use, copy, modify, merge, publish,</span></td></tr><tr><th id="L7"><a href="#L7">7</a></th><td><span class="cm"> * distribute, sublicense, and/or sell copies of the Software, and to</span></td></tr><tr><th id="L8"><a href="#L8">8</a></th><td><span class="cm"> * permit persons to whom the Software is furnished to do so, subject to</span></td></tr><tr><th id="L9"><a href="#L9">9</a></th><td><span class="cm"> * the following conditions:</span></td></tr><tr><th id="L10"><a href="#L10">10</a></th><td><span class="cm"> * </span></td></tr><tr><th id="L11"><a href="#L11">11</a></th><td><span class="cm"> * The above copyright notice and this permission notice shall be included</span></td></tr><tr><th id="L12"><a href="#L12">12</a></th><td><span class="cm"> * in all copies or substantial portions of the Software.</span></td></tr><tr><th id="L13"><a href="#L13">13</a></th><td><span class="cm"> * </span></td></tr><tr><th id="L14"><a href="#L14">14</a></th><td><span class="cm"> * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,</span></td></tr><tr><th id="L15"><a href="#L15">15</a></th><td><span class="cm"> * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF</span></td></tr><tr><th id="L16"><a href="#L16">16</a></th><td><span class="cm"> * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.</span></td></tr><tr><th id="L17"><a href="#L17">17</a></th><td><span class="cm"> * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY</span></td></tr><tr><th id="L18"><a href="#L18">18</a></th><td><span class="cm"> * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,</span></td></tr><tr><th id="L19"><a href="#L19">19</a></th><td><span class="cm"> * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE</span></td></tr><tr><th id="L20"><a href="#L20">20</a></th><td><span class="cm"> * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</span></td></tr><tr><th id="L21"><a href="#L21">21</a></th><td><span class="cm"> */</span></td></tr><tr><th id="L22"><a href="#L22">22</a></th><td></td></tr><tr><th id="L23"><a href="#L23">23</a></th><td><span class="cm">/*</span></td></tr><tr><th id="L24"><a href="#L24">24</a></th><td><span class="cm"> * platform-independent high resolution timer</span></td></tr><tr><th id="L25"><a href="#L25">25</a></th><td><span class="cm"> */</span></td></tr><tr><th id="L26"><a href="#L26">26</a></th><td><span class="cp"></span></td></tr><tr><th id="L27"><a href="#L27">27</a></th><td><span class="cp">#include "precompiled.h"</span></td></tr><tr><th id="L28"><a href="#L28">28</a></th><td><span class="cp">#include "lib/timer.h"</span></td></tr><tr><th id="L29"><a href="#L29">29</a></th><td><span class="cp"></span></td></tr><tr><th id="L30"><a href="#L30">30</a></th><td><span class="cp">#include &lt;sstream&gt;  </span><span class="c1">// std::stringstream</span></td></tr><tr><th id="L31"><a href="#L31">31</a></th><td><span class="c1"></span><span class="cp">#include &lt;numeric&gt;</span></td></tr><tr><th id="L32"><a href="#L32">32</a></th><td><span class="cp">#include &lt;cmath&gt;</span></td></tr><tr><th id="L33"><a href="#L33">33</a></th><td><span class="cp">#include &lt;cfloat&gt;</span></td></tr><tr><th id="L34"><a href="#L34">34</a></th><td><span class="cp">#include &lt;cstdarg&gt;</span></td></tr><tr><th id="L35"><a href="#L35">35</a></th><td><span class="cp"></span></td></tr><tr><th id="L36"><a href="#L36">36</a></th><td><span class="cp">#include "lib/module_init.h"</span></td></tr><tr><th id="L37"><a href="#L37">37</a></th><td><span class="cp">#include "lib/posix/posix_time.h"</span></td></tr><tr><th id="L38"><a href="#L38">38</a></th><td><span class="cp"># include "lib/sysdep/cpu.h"</span></td></tr><tr><th id="L39"><a href="#L39">39</a></th><td><span class="cp">#if OS_WIN</span></td></tr><tr><th id="L40"><a href="#L40">40</a></th><td><span class="cp"># include "lib/sysdep/os/win/whrt/whrt.h"</span></td></tr><tr><th id="L41"><a href="#L41">41</a></th><td><span class="cp">#endif</span></td></tr><tr><th id="L42"><a href="#L42">42</a></th><td><span class="cp">#if OS_UNIX</span></td></tr><tr><th id="L43"><a href="#L43">43</a></th><td><span class="cp"># include &lt;unistd.h&gt;</span></td></tr><tr><th id="L44"><a href="#L44">44</a></th><td><span class="cp">#endif</span></td></tr><tr><th id="L45"><a href="#L45">45</a></th><td><span class="cp"></span></td></tr><tr><th id="L46"><a href="#L46">46</a></th><td><span class="cp">#if OS_UNIX || OS_WIN</span></td></tr><tr><th id="L47"><a href="#L47">47</a></th><td><span class="cp"># define HAVE_GETTIMEOFDAY 1</span></td></tr><tr><th id="L48"><a href="#L48">48</a></th><td><span class="cp">#else</span></td></tr><tr><th id="L49"><a href="#L49">49</a></th><td><span class="cp"># define HAVE_GETTIMEOFDAY 0</span></td></tr><tr><th id="L50"><a href="#L50">50</a></th><td><span class="cp">#endif</span></td></tr><tr><th id="L51"><a href="#L51">51</a></th><td><span class="cp"></span></td></tr><tr><th id="L52"><a href="#L52">52</a></th><td><span class="cp">#if (defined(_POSIX_TIMERS) &amp;&amp; _POSIX_TIMERS &gt; 0) || OS_WIN</span></td></tr><tr><th id="L53"><a href="#L53">53</a></th><td><span class="cp"># define HAVE_CLOCK_GETTIME 1</span></td></tr><tr><th id="L54"><a href="#L54">54</a></th><td><span class="cp">#else</span></td></tr><tr><th id="L55"><a href="#L55">55</a></th><td><span class="cp"># define HAVE_CLOCK_GETTIME 0</span></td></tr><tr><th id="L56"><a href="#L56">56</a></th><td><span class="cp">#endif</span></td></tr><tr><th id="L57"><a href="#L57">57</a></th><td><span class="cp"></span></td></tr><tr><th id="L58"><a href="#L58">58</a></th><td><span class="c1">// rationale for wrapping gettimeofday and clock_gettime, instead of just</span></td></tr><tr><th id="L59"><a href="#L59">59</a></th><td><span class="c1">// emulating them where not available: allows returning higher-resolution</span></td></tr><tr><th id="L60"><a href="#L60">60</a></th><td><span class="c1">// timer values than their us / ns interface, via double [seconds].</span></td></tr><tr><th id="L61"><a href="#L61">61</a></th><td><span class="c1">// they're also not guaranteed to be monotonic.</span></td></tr><tr><th id="L62"><a href="#L62">62</a></th><td><span class="c1"></span><span class="cp"></span></td></tr><tr><th id="L63"><a href="#L63">63</a></th><td><span class="cp">#if HAVE_CLOCK_GETTIME</span></td></tr><tr><th id="L64"><a href="#L64">64</a></th><td><span class="cp"></span><span class="k">static</span> <span class="k">struct</span> timespec start<span class="p">;</span></td></tr><tr><th id="L65"><a href="#L65">65</a></th><td><span class="cp">#elif HAVE_GETTIMEOFDAY</span></td></tr><tr><th id="L66"><a href="#L66">66</a></th><td><span class="cp"></span><span class="k">static</span> <span class="k">struct</span> timeval start<span class="p">;</span></td></tr><tr><th id="L67"><a href="#L67">67</a></th><td><span class="cp">#endif</span></td></tr><tr><th id="L68"><a href="#L68">68</a></th><td><span class="cp"></span></td></tr><tr><th id="L69"><a href="#L69">69</a></th><td></td></tr><tr><th id="L70"><a href="#L70">70</a></th><td><span class="c1">//-----------------------------------------------------------------------------</span></td></tr><tr><th id="L71"><a href="#L71">71</a></th><td><span class="c1">// timer API</span></td></tr><tr><th id="L72"><a href="#L72">72</a></th><td><span class="c1"></span></td></tr><tr><th id="L73"><a href="#L73">73</a></th><td><span class="kt">void</span> timer_LatchStartTime<span class="p">()</span></td></tr><tr><th id="L74"><a href="#L74">74</a></th><td><span class="p">{</span></td></tr><tr><th id="L75"><a href="#L75">75</a></th><td><span class="cp">#if OS_WIN</span></td></tr><tr><th id="L76"><a href="#L76">76</a></th><td><span class="cp"></span>    <span class="c1">// whrt_Time starts at zero, nothing needs to be done.</span></td></tr><tr><th id="L77"><a href="#L77">77</a></th><td><span class="c1"></span><span class="cp">#elif HAVE_CLOCK_GETTIME</span></td></tr><tr><th id="L78"><a href="#L78">78</a></th><td><span class="cp"></span>    <span class="p">(</span><span class="kt">void</span><span class="p">)</span>clock_gettime<span class="p">(</span>CLOCK_REALTIME<span class="p">,</span> <span class="o">&amp;</span>start<span class="p">);</span></td></tr><tr><th id="L79"><a href="#L79">79</a></th><td><span class="cp">#elif HAVE_GETTIMEOFDAY</span></td></tr><tr><th id="L80"><a href="#L80">80</a></th><td><span class="cp"></span>    gettimeofday<span class="p">(</span><span class="o">&amp;</span>start<span class="p">,</span> <span class="mi">0</span><span class="p">);</span></td></tr><tr><th id="L81"><a href="#L81">81</a></th><td><span class="cp">#endif</span></td></tr><tr><th id="L82"><a href="#L82">82</a></th><td><span class="cp"></span><span class="p">}</span></td></tr><tr><th id="L83"><a href="#L83">83</a></th><td></td></tr><tr><th id="L84"><a href="#L84">84</a></th><td></td></tr><tr><th id="L85"><a href="#L85">85</a></th><td><span class="c1">// NB: does not guarantee strict monotonicity - callers must avoid</span></td></tr><tr><th id="L86"><a href="#L86">86</a></th><td><span class="c1">// dividing by the difference of two equal times.</span></td></tr><tr><th id="L87"><a href="#L87">87</a></th><td><span class="c1">// (this avoids having to update maxRepresentation when</span></td></tr><tr><th id="L88"><a href="#L88">88</a></th><td><span class="c1">// updating newTime to the (more recent) oldTime)</span></td></tr><tr><th id="L89"><a href="#L89">89</a></th><td><span class="c1"></span><span class="k">static</span> <span class="kt">void</span> EnsureMonotonic<span class="p">(</span><span class="kt">double</span><span class="o">&amp;</span> newTime<span class="p">)</span></td></tr><tr><th id="L90"><a href="#L90">90</a></th><td><span class="p">{</span></td></tr><tr><th id="L91"><a href="#L91">91</a></th><td>    i64 newRepresentation<span class="p">;</span></td></tr><tr><th id="L92"><a href="#L92">92</a></th><td>    memcpy<span class="p">(</span><span class="o">&amp;</span>newRepresentation<span class="p">,</span> <span class="o">&amp;</span>newTime<span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span>newRepresentation<span class="p">));</span></td></tr><tr><th id="L93"><a href="#L93">93</a></th><td></td></tr><tr><th id="L94"><a href="#L94">94</a></th><td>    <span class="c1">// representation of the latest time reported by any thread</span></td></tr><tr><th id="L95"><a href="#L95">95</a></th><td><span class="c1"></span>    <span class="k">static</span> <span class="k">volatile</span> i64 maxRepresentation<span class="p">;</span>  <span class="c1">// initially 0.0</span></td></tr><tr><th id="L96"><a href="#L96">96</a></th><td><span class="c1"></span></td></tr><tr><th id="L97"><a href="#L97">97</a></th><td><span class="nl">retry:</span></td></tr><tr><th id="L98"><a href="#L98">98</a></th><td>    <span class="k">const</span> i64 oldRepresentation <span class="o">=</span> maxRepresentation<span class="p">;</span>    <span class="c1">// latch</span></td></tr><tr><th id="L99"><a href="#L99">99</a></th><td><span class="c1"></span>    <span class="kt">double</span> oldTime<span class="p">;</span></td></tr><tr><th id="L100"><a href="#L100">100</a></th><td>    memcpy<span class="p">(</span><span class="o">&amp;</span>oldTime<span class="p">,</span> <span class="o">&amp;</span>oldRepresentation<span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span>oldTime<span class="p">));</span></td></tr><tr><th id="L101"><a href="#L101">101</a></th><td>    <span class="c1">// a previous or concurrent call got a more recent time -</span></td></tr><tr><th id="L102"><a href="#L102">102</a></th><td><span class="c1"></span>    <span class="c1">// return that and avoid updating maxRepresentation.</span></td></tr><tr><th id="L103"><a href="#L103">103</a></th><td><span class="c1"></span>    <span class="k">if</span><span class="p">(</span>newTime <span class="o">&lt;</span> oldTime<span class="p">)</span></td></tr><tr><th id="L104"><a href="#L104">104</a></th><td>    <span class="p">{</span></td></tr><tr><th id="L105"><a href="#L105">105</a></th><td>        newTime <span class="o">=</span> oldTime<span class="p">;</span></td></tr><tr><th id="L106"><a href="#L106">106</a></th><td>        <span class="k">return</span><span class="p">;</span></td></tr><tr><th id="L107"><a href="#L107">107</a></th><td>    <span class="p">}</span></td></tr><tr><th id="L108"><a href="#L108">108</a></th><td></td></tr><tr><th id="L109"><a href="#L109">109</a></th><td>    <span class="k">if</span><span class="p">(</span><span class="o">!</span>cpu_CAS64<span class="p">(</span><span class="o">&amp;</span>maxRepresentation<span class="p">,</span> oldRepresentation<span class="p">,</span> newRepresentation<span class="p">))</span></td></tr><tr><th id="L110"><a href="#L110">110</a></th><td>        <span class="k">goto</span> retry<span class="p">;</span></td></tr><tr><th id="L111"><a href="#L111">111</a></th><td><span class="p">}</span></td></tr><tr><th id="L112"><a href="#L112">112</a></th><td></td></tr><tr><th id="L113"><a href="#L113">113</a></th><td></td></tr><tr><th id="L114"><a href="#L114">114</a></th><td><span class="kt">double</span> timer_Time<span class="p">()</span></td></tr><tr><th id="L115"><a href="#L115">115</a></th><td><span class="p">{</span></td></tr><tr><th id="L116"><a href="#L116">116</a></th><td>    <span class="kt">double</span> t<span class="p">;</span></td></tr><tr><th id="L117"><a href="#L117">117</a></th><td><span class="cp"></span></td></tr><tr><th id="L118"><a href="#L118">118</a></th><td><span class="cp">#if OS_WIN</span></td></tr><tr><th id="L119"><a href="#L119">119</a></th><td><span class="cp"></span>    t <span class="o">=</span> whrt_Time<span class="p">();</span></td></tr><tr><th id="L120"><a href="#L120">120</a></th><td><span class="cp">#elif HAVE_CLOCK_GETTIME</span></td></tr><tr><th id="L121"><a href="#L121">121</a></th><td><span class="cp"></span>    ENSURE<span class="p">(</span>start<span class="p">.</span>tv_sec <span class="o">||</span> start<span class="p">.</span>tv_nsec<span class="p">);</span>  <span class="c1">// must have called timer_LatchStartTime first</span></td></tr><tr><th id="L122"><a href="#L122">122</a></th><td><span class="c1"></span>    <span class="k">struct</span> timespec cur<span class="p">;</span></td></tr><tr><th id="L123"><a href="#L123">123</a></th><td>    <span class="p">(</span><span class="kt">void</span><span class="p">)</span>clock_gettime<span class="p">(</span>CLOCK_REALTIME<span class="p">,</span> <span class="o">&amp;</span>cur<span class="p">);</span></td></tr><tr><th id="L124"><a href="#L124">124</a></th><td>    t <span class="o">=</span> <span class="p">(</span>cur<span class="p">.</span>tv_sec <span class="o">-</span> start<span class="p">.</span>tv_sec<span class="p">)</span> <span class="o">+</span> <span class="p">(</span>cur<span class="p">.</span>tv_nsec <span class="o">-</span> start<span class="p">.</span>tv_nsec<span class="p">)</span><span class="o">*</span><span class="mf">1e-9</span><span class="p">;</span></td></tr><tr><th id="L125"><a href="#L125">125</a></th><td><span class="cp">#elif HAVE_GETTIMEOFDAY</span></td></tr><tr><th id="L126"><a href="#L126">126</a></th><td><span class="cp"></span>    ENSURE<span class="p">(</span>start<span class="p">.</span>tv_sec <span class="o">||</span> start<span class="p">.</span>tv_usec<span class="p">);</span>  <span class="c1">// must have called timer_LatchStartTime first</span></td></tr><tr><th id="L127"><a href="#L127">127</a></th><td><span class="c1"></span>    <span class="k">struct</span> timeval cur<span class="p">;</span></td></tr><tr><th id="L128"><a href="#L128">128</a></th><td>    gettimeofday<span class="p">(</span><span class="o">&amp;</span>cur<span class="p">,</span> <span class="mi">0</span><span class="p">);</span></td></tr><tr><th id="L129"><a href="#L129">129</a></th><td>    t <span class="o">=</span> <span class="p">(</span>cur<span class="p">.</span>tv_sec <span class="o">-</span> start<span class="p">.</span>tv_sec<span class="p">)</span> <span class="o">+</span> <span class="p">(</span>cur<span class="p">.</span>tv_usec <span class="o">-</span> start<span class="p">.</span>tv_usec<span class="p">)</span><span class="o">*</span><span class="mf">1e-6</span><span class="p">;</span></td></tr><tr><th id="L130"><a href="#L130">130</a></th><td><span class="cp">#else</span></td></tr><tr><th id="L131"><a href="#L131">131</a></th><td><span class="cp"># error "timer_Time: add timer implementation for this platform!"</span></td></tr><tr><th id="L132"><a href="#L132">132</a></th><td><span class="cp">#endif</span></td></tr><tr><th id="L133"><a href="#L133">133</a></th><td><span class="cp"></span></td></tr><tr><th id="L134"><a href="#L134">134</a></th><td>    EnsureMonotonic<span class="p">(</span>t<span class="p">);</span></td></tr><tr><th id="L135"><a href="#L135">135</a></th><td>    <span class="k">return</span> t<span class="p">;</span></td></tr><tr><th id="L136"><a href="#L136">136</a></th><td><span class="p">}</span></td></tr><tr><th id="L137"><a href="#L137">137</a></th><td></td></tr><tr><th id="L138"><a href="#L138">138</a></th><td></td></tr><tr><th id="L139"><a href="#L139">139</a></th><td><span class="c1">// cached because the default implementation may take several milliseconds</span></td></tr><tr><th id="L140"><a href="#L140">140</a></th><td><span class="c1"></span><span class="k">static</span> <span class="kt">double</span> resolution<span class="p">;</span></td></tr><tr><th id="L141"><a href="#L141">141</a></th><td></td></tr><tr><th id="L142"><a href="#L142">142</a></th><td><span class="k">static</span> Status InitResolution<span class="p">()</span></td></tr><tr><th id="L143"><a href="#L143">143</a></th><td><span class="p">{</span></td></tr><tr><th id="L144"><a href="#L144">144</a></th><td><span class="cp">#if OS_WIN</span></td></tr><tr><th id="L145"><a href="#L145">145</a></th><td><span class="cp"></span>    resolution <span class="o">=</span> whrt_Resolution<span class="p">();</span></td></tr><tr><th id="L146"><a href="#L146">146</a></th><td><span class="cp">#elif HAVE_CLOCK_GETTIME</span></td></tr><tr><th id="L147"><a href="#L147">147</a></th><td><span class="cp"></span>    <span class="k">struct</span> timespec ts<span class="p">;</span></td></tr><tr><th id="L148"><a href="#L148">148</a></th><td>    <span class="k">if</span><span class="p">(</span>clock_getres<span class="p">(</span>CLOCK_REALTIME<span class="p">,</span> <span class="o">&amp;</span>ts<span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span></td></tr><tr><th id="L149"><a href="#L149">149</a></th><td>        resolution <span class="o">=</span> ts<span class="p">.</span>tv_nsec <span class="o">*</span> <span class="mf">1e-9</span><span class="p">;</span></td></tr><tr><th id="L150"><a href="#L150">150</a></th><td><span class="cp">#else</span></td></tr><tr><th id="L151"><a href="#L151">151</a></th><td><span class="cp"></span>    <span class="k">const</span> <span class="kt">double</span> t0 <span class="o">=</span> timer_Time<span class="p">();</span></td></tr><tr><th id="L152"><a href="#L152">152</a></th><td>    <span class="kt">double</span> t1<span class="p">,</span> t2<span class="p">;</span></td></tr><tr><th id="L153"><a href="#L153">153</a></th><td>    <span class="k">do</span> t1 <span class="o">=</span> timer_Time<span class="p">();</span> <span class="k">while</span><span class="p">(</span>t1 <span class="o">==</span> t0<span class="p">);</span></td></tr><tr><th id="L154"><a href="#L154">154</a></th><td>    <span class="k">do</span> t2 <span class="o">=</span> timer_Time<span class="p">();</span> <span class="k">while</span><span class="p">(</span>t2 <span class="o">==</span> t1<span class="p">);</span></td></tr><tr><th id="L155"><a href="#L155">155</a></th><td>    resolution <span class="o">=</span> t2<span class="o">-</span>t1<span class="p">;</span></td></tr><tr><th id="L156"><a href="#L156">156</a></th><td><span class="cp">#endif</span></td></tr><tr><th id="L157"><a href="#L157">157</a></th><td><span class="cp"></span></td></tr><tr><th id="L158"><a href="#L158">158</a></th><td>    <span class="k">return</span> INFO<span class="o">::</span>OK<span class="p">;</span></td></tr><tr><th id="L159"><a href="#L159">159</a></th><td><span class="p">}</span></td></tr><tr><th id="L160"><a href="#L160">160</a></th><td></td></tr><tr><th id="L161"><a href="#L161">161</a></th><td><span class="kt">double</span> timer_Resolution<span class="p">()</span></td></tr><tr><th id="L162"><a href="#L162">162</a></th><td><span class="p">{</span></td></tr><tr><th id="L163"><a href="#L163">163</a></th><td>    <span class="k">static</span> ModuleInitState initState<span class="p">;</span></td></tr><tr><th id="L164"><a href="#L164">164</a></th><td>    ModuleInit<span class="p">(</span><span class="o">&amp;</span>initState<span class="p">,</span> InitResolution<span class="p">);</span></td></tr><tr><th id="L165"><a href="#L165">165</a></th><td>    <span class="k">return</span> resolution<span class="p">;</span></td></tr><tr><th id="L166"><a href="#L166">166</a></th><td><span class="p">}</span></td></tr><tr><th id="L167"><a href="#L167">167</a></th><td></td></tr><tr><th id="L168"><a href="#L168">168</a></th><td></td></tr><tr><th id="L169"><a href="#L169">169</a></th><td><span class="c1">//-----------------------------------------------------------------------------</span></td></tr><tr><th id="L170"><a href="#L170">170</a></th><td><span class="c1">// client API</span></td></tr><tr><th id="L171"><a href="#L171">171</a></th><td><span class="c1"></span></td></tr><tr><th id="L172"><a href="#L172">172</a></th><td><span class="c1">// intrusive linked-list of all clients. a fixed-size limit would be</span></td></tr><tr><th id="L173"><a href="#L173">173</a></th><td><span class="c1">// acceptable (since timers are added manually), but the list is easy</span></td></tr><tr><th id="L174"><a href="#L174">174</a></th><td><span class="c1">// to implement and only has the drawback of exposing TimerClient to users.</span></td></tr><tr><th id="L175"><a href="#L175">175</a></th><td><span class="c1">//</span></td></tr><tr><th id="L176"><a href="#L176">176</a></th><td><span class="c1">// do not use std::list et al. for this! we must be callable at any time,</span></td></tr><tr><th id="L177"><a href="#L177">177</a></th><td><span class="c1">// especially before NLSO ctors run or before heap init.</span></td></tr><tr><th id="L178"><a href="#L178">178</a></th><td><span class="c1"></span><span class="k">static</span> size_t numClients<span class="p">;</span></td></tr><tr><th id="L179"><a href="#L179">179</a></th><td><span class="k">static</span> TimerClient<span class="o">*</span> clients<span class="p">;</span></td></tr><tr><th id="L180"><a href="#L180">180</a></th><td></td></tr><tr><th id="L181"><a href="#L181">181</a></th><td></td></tr><tr><th id="L182"><a href="#L182">182</a></th><td>TimerClient<span class="o">*</span> timer_AddClient<span class="p">(</span>TimerClient<span class="o">*</span> tc<span class="p">,</span> <span class="k">const</span> <span class="kt">wchar_t</span><span class="o">*</span> description<span class="p">)</span></td></tr><tr><th id="L183"><a href="#L183">183</a></th><td><span class="p">{</span></td></tr><tr><th id="L184"><a href="#L184">184</a></th><td>    tc<span class="o">-&gt;</span>sum<span class="p">.</span>SetToZero<span class="p">();</span></td></tr><tr><th id="L185"><a href="#L185">185</a></th><td></td></tr><tr><th id="L186"><a href="#L186">186</a></th><td>    tc<span class="o">-&gt;</span>description <span class="o">=</span> description<span class="p">;</span></td></tr><tr><th id="L187"><a href="#L187">187</a></th><td></td></tr><tr><th id="L188"><a href="#L188">188</a></th><td>    <span class="c1">// insert at front of list</span></td></tr><tr><th id="L189"><a href="#L189">189</a></th><td><span class="c1"></span>    tc<span class="o">-&gt;</span>next <span class="o">=</span> clients<span class="p">;</span></td></tr><tr><th id="L190"><a href="#L190">190</a></th><td>    clients <span class="o">=</span> tc<span class="p">;</span></td></tr><tr><th id="L191"><a href="#L191">191</a></th><td>    numClients<span class="o">++</span><span class="p">;</span></td></tr><tr><th id="L192"><a href="#L192">192</a></th><td></td></tr><tr><th id="L193"><a href="#L193">193</a></th><td>    <span class="k">return</span> tc<span class="p">;</span></td></tr><tr><th id="L194"><a href="#L194">194</a></th><td><span class="p">}</span></td></tr><tr><th id="L195"><a href="#L195">195</a></th><td></td></tr><tr><th id="L196"><a href="#L196">196</a></th><td></td></tr><tr><th id="L197"><a href="#L197">197</a></th><td><span class="kt">void</span> timer_DisplayClientTotals<span class="p">()</span></td></tr><tr><th id="L198"><a href="#L198">198</a></th><td><span class="p">{</span></td></tr><tr><th id="L199"><a href="#L199">199</a></th><td>    debug_printf<span class="p">(</span><span class="s">L"TIMER TOTALS (%lu clients)</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="p">(</span><span class="kt">unsigned</span> <span class="kt">long</span><span class="p">)</span>numClients<span class="p">);</span></td></tr><tr><th id="L200"><a href="#L200">200</a></th><td>    debug_printf<span class="p">(</span><span class="s">L"-----------------------------------------------------</span><span class="se">\n</span><span class="s">"</span><span class="p">);</span></td></tr><tr><th id="L201"><a href="#L201">201</a></th><td></td></tr><tr><th id="L202"><a href="#L202">202</a></th><td>    <span class="k">while</span><span class="p">(</span>clients<span class="p">)</span></td></tr><tr><th id="L203"><a href="#L203">203</a></th><td>    <span class="p">{</span></td></tr><tr><th id="L204"><a href="#L204">204</a></th><td>        <span class="c1">// (make sure list and count are consistent)</span></td></tr><tr><th id="L205"><a href="#L205">205</a></th><td><span class="c1"></span>        ENSURE<span class="p">(</span>numClients <span class="o">!=</span> <span class="mi">0</span><span class="p">);</span></td></tr><tr><th id="L206"><a href="#L206">206</a></th><td>        TimerClient<span class="o">*</span> tc <span class="o">=</span> clients<span class="p">;</span></td></tr><tr><th id="L207"><a href="#L207">207</a></th><td>        clients <span class="o">=</span> tc<span class="o">-&gt;</span>next<span class="p">;</span></td></tr><tr><th id="L208"><a href="#L208">208</a></th><td>        numClients<span class="o">--</span><span class="p">;</span></td></tr><tr><th id="L209"><a href="#L209">209</a></th><td></td></tr><tr><th id="L210"><a href="#L210">210</a></th><td>        <span class="k">const</span> std<span class="o">::</span>wstring duration <span class="o">=</span> tc<span class="o">-&gt;</span>sum<span class="p">.</span>ToString<span class="p">();</span></td></tr><tr><th id="L211"><a href="#L211">211</a></th><td>        debug_printf<span class="p">(</span><span class="s">L"  %ls: %ls (%lux)</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> tc<span class="o">-&gt;</span>description<span class="p">,</span> duration<span class="p">.</span>c_str<span class="p">(),</span> <span class="p">(</span><span class="kt">unsigned</span> <span class="kt">long</span><span class="p">)</span>tc<span class="o">-&gt;</span>num_calls<span class="p">);</span></td></tr><tr><th id="L212"><a href="#L212">212</a></th><td>    <span class="p">}</span></td></tr><tr><th id="L213"><a href="#L213">213</a></th><td></td></tr><tr><th id="L214"><a href="#L214">214</a></th><td>    debug_printf<span class="p">(</span><span class="s">L"-----------------------------------------------------</span><span class="se">\n</span><span class="s">"</span><span class="p">);</span></td></tr><tr><th id="L215"><a href="#L215">215</a></th><td><span class="p">}</span></td></tr><tr><th id="L216"><a href="#L216">216</a></th><td></td></tr><tr><th id="L217"><a href="#L217">217</a></th><td></td></tr><tr><th id="L218"><a href="#L218">218</a></th><td><span class="c1">//-----------------------------------------------------------------------------</span></td></tr><tr><th id="L219"><a href="#L219">219</a></th><td><span class="c1"></span></td></tr><tr><th id="L220"><a href="#L220">220</a></th><td>std<span class="o">::</span>wstring StringForSeconds<span class="p">(</span><span class="kt">double</span> seconds<span class="p">)</span></td></tr><tr><th id="L221"><a href="#L221">221</a></th><td><span class="p">{</span></td></tr><tr><th id="L222"><a href="#L222">222</a></th><td>    <span class="kt">double</span> scale <span class="o">=</span> <span class="mf">1e6</span><span class="p">;</span></td></tr><tr><th id="L223"><a href="#L223">223</a></th><td>    <span class="k">const</span> <span class="kt">wchar_t</span><span class="o">*</span> unit <span class="o">=</span> <span class="s">L" us"</span><span class="p">;</span></td></tr><tr><th id="L224"><a href="#L224">224</a></th><td>    <span class="k">if</span><span class="p">(</span>seconds <span class="o">&gt;</span> <span class="mf">1.0</span><span class="p">)</span></td></tr><tr><th id="L225"><a href="#L225">225</a></th><td>        scale <span class="o">=</span> <span class="mi">1</span><span class="p">,</span> unit <span class="o">=</span> <span class="s">L" s"</span><span class="p">;</span></td></tr><tr><th id="L226"><a href="#L226">226</a></th><td>    <span class="k">else</span> <span class="k">if</span><span class="p">(</span>seconds <span class="o">&gt;</span> <span class="mf">1e-3</span><span class="p">)</span></td></tr><tr><th id="L227"><a href="#L227">227</a></th><td>        scale <span class="o">=</span> <span class="mf">1e3</span><span class="p">,</span> unit <span class="o">=</span> <span class="s">L" ms"</span><span class="p">;</span></td></tr><tr><th id="L228"><a href="#L228">228</a></th><td></td></tr><tr><th id="L229"><a href="#L229">229</a></th><td>    std<span class="o">::</span>wstringstream ss<span class="p">;</span></td></tr><tr><th id="L230"><a href="#L230">230</a></th><td>    ss <span class="o">&lt;&lt;</span> seconds<span class="o">*</span>scale<span class="p">;</span></td></tr><tr><th id="L231"><a href="#L231">231</a></th><td>    ss <span class="o">&lt;&lt;</span> unit<span class="p">;</span></td></tr><tr><th id="L232"><a href="#L232">232</a></th><td>    <span class="k">return</span> ss<span class="p">.</span>str<span class="p">();</span></td></tr><tr><th id="L233"><a href="#L233">233</a></th><td><span class="p">}</span></td></tr><tr><th id="L234"><a href="#L234">234</a></th><td></td></tr><tr><th id="L235"><a href="#L235">235</a></th><td></td></tr><tr><th id="L236"><a href="#L236">236</a></th><td>std<span class="o">::</span>wstring StringForCycles<span class="p">(</span>Cycles cycles<span class="p">)</span></td></tr><tr><th id="L237"><a href="#L237">237</a></th><td><span class="p">{</span></td></tr><tr><th id="L238"><a href="#L238">238</a></th><td>    <span class="kt">double</span> scale <span class="o">=</span> <span class="mf">1.0</span><span class="p">;</span></td></tr><tr><th id="L239"><a href="#L239">239</a></th><td>    <span class="k">const</span> <span class="kt">wchar_t</span><span class="o">*</span> unit <span class="o">=</span> <span class="s">L" c"</span><span class="p">;</span></td></tr><tr><th id="L240"><a href="#L240">240</a></th><td>    <span class="k">if</span><span class="p">(</span>cycles <span class="o">&gt;</span> <span class="mi">10000000000L</span>L<span class="p">)</span>  <span class="c1">// 10 Gc</span></td></tr><tr><th id="L241"><a href="#L241">241</a></th><td><span class="c1"></span>        scale <span class="o">=</span> <span class="mf">1e-9</span><span class="p">,</span> unit <span class="o">=</span> <span class="s">L" Gc"</span><span class="p">;</span></td></tr><tr><th id="L242"><a href="#L242">242</a></th><td>    <span class="k">else</span> <span class="k">if</span><span class="p">(</span>cycles <span class="o">&gt;</span> <span class="mi">10000000</span><span class="p">)</span>  <span class="c1">// 10 Mc</span></td></tr><tr><th id="L243"><a href="#L243">243</a></th><td><span class="c1"></span>        scale <span class="o">=</span> <span class="mf">1e-6</span><span class="p">,</span> unit <span class="o">=</span> <span class="s">L" Mc"</span><span class="p">;</span></td></tr><tr><th id="L244"><a href="#L244">244</a></th><td>    <span class="k">else</span> <span class="k">if</span><span class="p">(</span>cycles <span class="o">&gt;</span> <span class="mi">10000</span><span class="p">)</span> <span class="c1">// 10 kc</span></td></tr><tr><th id="L245"><a href="#L245">245</a></th><td><span class="c1"></span>        scale <span class="o">=</span> <span class="mf">1e-3</span><span class="p">,</span> unit <span class="o">=</span> <span class="s">L" kc"</span><span class="p">;</span></td></tr><tr><th id="L246"><a href="#L246">246</a></th><td></td></tr><tr><th id="L247"><a href="#L247">247</a></th><td>    std<span class="o">::</span>wstringstream ss<span class="p">;</span></td></tr><tr><th id="L248"><a href="#L248">248</a></th><td>    ss <span class="o">&lt;&lt;</span> cycles<span class="o">*</span>scale<span class="p">;</span></td></tr><tr><th id="L249"><a href="#L249">249</a></th><td>    ss <span class="o">&lt;&lt;</span> unit<span class="p">;</span></td></tr><tr><th id="L250"><a href="#L250">250</a></th><td>    <span class="k">return</span> ss<span class="p">.</span>str<span class="p">();</span></td></tr><tr><th id="L251"><a href="#L251">251</a></th><td><span class="p">}</span></td></tr></tbody></table>

      </div>
      <div id="help"><strong>Note:</strong> See <a href="/wiki/TracBrowser">TracBrowser</a>
        for help on using the repository browser.</div>
      <div id="anydiff">
        <form action="/diff" method="get">
          <div class="buttons">
            <input type="hidden" name="new_path" value="/ps/trunk/source/lib/timer.cpp" />
            <input type="hidden" name="old_path" value="/ps/trunk/source/lib/timer.cpp" />
            <input type="hidden" name="new_rev" />
            <input type="hidden" name="old_rev" />
            <input type="submit" value="View changes..." title="Select paths and revs for Diff" />
          </div>
        </form>
      </div>
    </div>
    <div id="altlinks">
      <h3>Download in other formats:</h3>
      <ul>
        <li class="first">
          <a rel="nofollow" href="/browser/ps/trunk/source/lib/timer.cpp?format=txt">Plain Text</a>
        </li><li class="last">
          <a rel="nofollow" href="/export/12774/ps/trunk/source/lib/timer.cpp">Original Format</a>
        </li>
      </ul>
    </div>
    </div>
    <div id="footer" lang="en" xml:lang="en"><hr />
      <a id="tracpowered" href="http://trac.edgewall.org/"><img src="/chrome/common/trac_logo_mini.png" height="30" width="107" alt="Trac Powered" /></a>
      <p class="left">Powered by <a href="/about"><strong>Trac 0.12.3</strong></a><br />
        By <a href="http://www.edgewall.org/">Edgewall Software</a>.</p>
      <p class="right"><a href="http://wildfiregames.com/forum">WFG Forums</a></p>
    </div>
  </body>
</html>